!pip install keras
!pip install matplotlib
!pip install numpy

import numpy as np
import pandas as pd
import cv2
import matplotlib.pyplot as plt
from PIL import Image
from keras import layers
from keras.preprocessing.image import ImageDataGenerator, load_img
from keras.models import Sequential
from keras.layers import Dense, Activation, Dropout, Flatten
from keras.layers import Conv2D, MaxPooling2D
from keras.optimizers import Adam
from keras.utils import to_categorical
from keras import metrics

from google.colab import drive
drive.mount('/content/drive')

  url = ('/content/drive/MyDrive/FaceID')
  img_size = 32

train_datagen = ImageDataGenerator(rescale = 1./255, shear_range = 0.2,
                                   zoom_range = 0.2,
                                   horizontal_flip= True,
                                   validation_split = 0.2)
test_datagen = ImageDataGenerator(rescale = 1./255,
                                  validation_split = 0.2)

train_datagen = train_datagen.flow_from_directory(url,
                                                  target_size = (img_size,img_size),
                                                  subset = 'training')
test_datagen = test_datagen.flow_from_directory(url, target_size = (img_size,img_size),
                                                subset = 'validation')

model = Sequential()

model.add(Conv2D(32, (3,3), padding = 'same', activation = 'relu',
                       input_shape = (32,32,3), kernel_initializer = 'he_uniform'))
model.add(MaxPooling2D(pool_size = (2,2)))

model.add(Flatten())
model.add(Dense(512))
model.add(Dense(512, activation='relu'))
model.add(Dense(7, activation='softmax'))

model.summary()

from keras.utils import plot_model
plot_model(model, show_shapes = True, show_dtype = True, show_layer_activations = True)

model.compile(optimizer = Adam(), loss = 'categorical_crossentropy', metrics = ['accuracy'])

model.fit(train_datagen, epochs = 30, validation_data = test_datagen)

from keras.models import load_model
model.save('model_4.h5')
model_4 = load_model('/content/model_4.h5')

train_datagen.class_indices

from keras.preprocessing import image
list_ = ['Khuôn mặt dài',
 'Khuôn mặt hình chữ điền',
 'Khuôn mặt hình kim cương',
 'Khuôn mặt hình tam giác',
 'Khuôn mặt hình trái tim',
 'Khuôn mặt hình trái xoan',
 'Khuôn mặt hình tròn']
test_image = image.load_img('/content/drive/MyDrive/face/WIN_20240408_13_32_30_Pro.jpg', target_size=(32, 32))
test_image = image.img_to_array(test_image)
test_image = np.expand_dims(test_image, axis=0)
result = model.predict(test_image)
print(result)
i=0
for i in range(len(result[0])):
  if(result[0][i]==1):
    print(list_[i])
    break
